name: Frontend Deploy

on:
  push:
    branches: [ "main" ]
    paths:
        - infrastructure/frontend/**
        - frontend/**
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_VERSION: '1.5.6'

jobs:
  frontend-infrastructure-deploy:
    name: Frontend infrastructure deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'infrastructure/frontend/main'
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Workspace
      run: terraform workspace select production

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false

  frontend-app-upload:
    name: Frontend app upload
    needs: frontend-infrastructure-deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'frontend'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Setup Flutter"
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install dependencies
        run: flutter pub get

      - name: Run Build Runner
        run: dart run build_runner build

      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Load AWS SSM parameters
        uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
            parameterPairs: "/production/event_planr/awsRegion = AWS_REGION,
                /production/event_planr/eventPlanrApiUrl = EVENT_PLANR_API_URL,
                /production/event_planr/cognitoPoolId = COGNITO_POOL_ID,
                /production/event_planr/cognitoPoolClientId = COGNITO_POOL_CLIENT_ID,
                /production/event_planr/chatMessageGraphqlUrl = CHAT_MESSAGE_GRAPHQL_URL,
                /production/event_planr/nominatimApiUrl = NOMINATIM_API_URL,
                /production/event_planr/frontendBucket = FRONTEND_BUCKET,
                /production/event_planr/androidApkUrl = ANDROID_APK_URL"
            withDecryption: "true"

      - name: Create .env file
        run: |
          touch .env.prod
          echo AWS_REGION="$AWS_REGION" >> .env.prod
          echo EVENT_PLANR_API_URL="$EVENT_PLANR_API_URL" >> .env.prod
          echo COGNITO_POOL_ID="$COGNITO_POOL_ID" >> .env.prod
          echo COGNITO_POOL_CLIENT_ID="$COGNITO_POOL_CLIENT_ID" >> .env.prod
          echo CHAT_MESSAGE_GRAPHQL_URL="$CHAT_MESSAGE_GRAPHQL_URL" >> .env.prod
          echo NOMINATIM_API_URL="$NOMINATIM_API_URL" >> .env.prod
          echo ANDROID_APK_URL="$ANDROID_APK_URL" >> .env.prod

      - name: Create web build
        run: flutter build web --target lib/main_production.dart --dart-define-from-file .env.prod --output web_build

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      - name: Create android app build
        run: flutter build apk --target lib/main_production.dart --flavor production --dart-define-from-file .env.prod

      - name: Upload web build
        run: aws s3 cp web_build s3://$FRONTEND_BUCKET/ --recursive

      - name: Upload android app build
        run: aws s3 cp build/app/outputs/flutter-apk/app-production-release.apk s3://$FRONTEND_BUCKET